-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- Create main GUI elements
local ScreenGui = Instance.new("ScreenGui")
local LoadingFrame = Instance.new("Frame")
local MainFrame = Instance.new("Frame")

-- GUI Setup
ScreenGui.Name = "HackerInterface"
ScreenGui.Parent = game:GetService("CoreGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Loading Screen
LoadingFrame.Name = "LoadingFrame"
LoadingFrame.Parent = ScreenGui
LoadingFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
LoadingFrame.BorderColor3 = Color3.fromRGB(255, 0, 0)
LoadingFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
LoadingFrame.Size = UDim2.new(0, 400, 0, 300)
LoadingFrame.ZIndex = 1000

local LoadingTitle = Instance.new("TextLabel")
LoadingTitle.Name = "LoadingTitle"
LoadingTitle.Parent = LoadingFrame
LoadingTitle.BackgroundTransparency = 1
LoadingTitle.Position = UDim2.new(0, 0, 0, 20)
LoadingTitle.Size = UDim2.new(1, 0, 0, 30)
LoadingTitle.Font = Enum.Font.Code
LoadingTitle.Text = "C00lgui v8"
LoadingTitle.TextColor3 = Color3.fromRGB(255, 0, 0)
LoadingTitle.TextSize = 24
LoadingTitle.ZIndex = 1001

-- User Info Display
local UserInfo = Instance.new("TextLabel")
UserInfo.Name = "UserInfo"
UserInfo.Parent = LoadingFrame
UserInfo.BackgroundTransparency = 1
UserInfo.Position = UDim2.new(0, 10, 0, 60)
UserInfo.Size = UDim2.new(1, -20, 0, 20)
UserInfo.Font = Enum.Font.Code
UserInfo.Text = "User: " .. Players.LocalPlayer.Name
UserInfo.TextColor3 = Color3.fromRGB(255, 0, 0)
UserInfo.TextSize = 14
UserInfo.TextXAlignment = Enum.TextXAlignment.Left
UserInfo.ZIndex = 1001

-- Loading Bar
local LoadingBar = Instance.new("Frame")
LoadingBar.Name = "LoadingBar"
LoadingBar.Parent = LoadingFrame
LoadingBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
LoadingBar.BorderColor3 = Color3.fromRGB(255, 0, 0)
LoadingBar.Position = UDim2.new(0, 10, 0, 130)
LoadingBar.Size = UDim2.new(1, -20, 0, 20)
LoadingBar.ZIndex = 1001

local LoadingFill = Instance.new("Frame")
LoadingFill.Name = "LoadingFill"
LoadingFill.Parent = LoadingBar
LoadingFill.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
LoadingFill.BorderSizePixel = 0
LoadingFill.Size = UDim2.new(0, 0, 1, 0)
LoadingFill.ZIndex = 1002

-- Create glitch text effect
local function glitchText(text)
    local glitchChars = {"Δ", "Σ", "π", "Ω", "λ", "γ"}
    local result = ""
    for i = 1, #text do
        if math.random() < 0.1 then
            result = result .. glitchChars[math.random(1, #glitchChars)]
        else
            result = result .. text:sub(i,i)
        end
    end
    return result
end

-- Main Interface Setup
MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
MainFrame.BorderColor3 = Color3.fromRGB(255, 0, 0)
MainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
MainFrame.Size = UDim2.new(0, 400, 0, 300)
MainFrame.Visible = false
MainFrame.Active = true
MainFrame.Draggable = true

-- Create the scanner effect
local ScannerEffect = Instance.new("Frame")
ScannerEffect.Name = "ScannerEffect"
ScannerEffect.Parent = MainFrame
ScannerEffect.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
ScannerEffect.BackgroundTransparency = 0.9
ScannerEffect.BorderSizePixel = 0
ScannerEffect.Size = UDim2.new(1, 0, 0, 2)
ScannerEffect.ZIndex = 2

-- Create Tab System with modern styling
local TabContainer = Instance.new("Frame")
TabContainer.Name = "TabContainer"
TabContainer.Parent = MainFrame
TabContainer.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
TabContainer.BorderColor3 = Color3.fromRGB(255, 0, 0)
TabContainer.Position = UDim2.new(0, 10, 0, 40)
TabContainer.Size = UDim2.new(1, -20, 0, 30)

-- [Previous function implementations remain the same]
-- Add remaining UI elements and functionality from source.txt with updated styling

-- Loading Animation
local function typeWrite(text, label)
    local displayText = ""
    for i = 1, #text do
        displayText = displayText .. text:sub(i,i)
        label.Text = displayText
        if math.random() < 0.1 then
            label.Text = glitchText(displayText)
            wait(0.02)
            label.Text = displayText
        end
        wait(0.02)
    end
end

-- Start System with new animations
local function startSystem()
    local loadingSteps = {
        {text = "Initializing system modules...", time = 0.5},
        {text = "Bypassing security protocols...", time = 0.7},
        {text = "Accessing mainframe...", time = 0.6},
        {text = "Loading exploit framework...", time = 0.8},
        {text = "Establishing secure connection...", time = 0.5},
        {text = "System successfully compromised", time = 1.0}
    }
    
    for _, step in ipairs(loadingSteps) do
        typeWrite(step.text, LoadingStatus)
        wait(step.time)
    end
    
    -- Transition to main interface with modern animation
    TweenService:Create(LoadingFrame, TweenInfo.new(1), {
        BackgroundTransparency = 1,
        Position = UDim2.new(0.5, -200, 0.6, -150)
    }):Play()
    
    MainFrame.Position = UDim2.new(0.5, -200, 0.4, -150)
    MainFrame.BackgroundTransparency = 1
    MainFrame.Visible = true
    
    TweenService:Create(MainFrame, TweenInfo.new(1), {
        BackgroundTransparency = 0,
        Position = UDim2.new(0.5, -200, 0.5, -150)
    }):Play()
    
    wait(1)
    LoadingFrame:Destroy()
end

-- Scanner Animation
local function animateScanner()
    while true do
        TweenService:Create(ScannerEffect, TweenInfo.new(2, Enum.EasingStyle.Linear), {
            Position = UDim2.new(0, 0, 1, 0)
        }):Play()
        wait(2)
        ScannerEffect.Position = UDim2.new(0, 0, 0, -2)
    end
end

-- Initialize the interface with modern styling
startSystem()
coroutine.wrap(animateScanner)()

-- [Previous feature implementations (Aimbot, Orbit, etc.) remain the same but with updated styling]
-- Part 2: Core Feature Implementation - Aimbot and Orbit

-- Aimbot Page Implementation
local aimbotPage = Instance.new("Frame")
aimbotPage.Name = "AimbotPage"
aimbotPage.Parent = ContentContainer
aimbotPage.BackgroundTransparency = 1
aimbotPage.Size = UDim2.new(1, 0, 1, 0)
aimbotPage.Visible = true

local aimbotInput = Instance.new("TextBox")
aimbotInput.Name = "AimbotInput"
aimbotInput.Parent = aimbotPage
aimbotInput.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
aimbotInput.BorderColor3 = Color3.fromRGB(255, 0, 0)
aimbotInput.Position = UDim2.new(0.05, 0, 0.05, 0)
aimbotInput.Size = UDim2.new(0.65, 0, 0.1, 0)
aimbotInput.Font = Enum.Font.Code
aimbotInput.PlaceholderText = "Enter Username (Optional)"
aimbotInput.TextColor3 = Color3.fromRGB(255, 0, 0)
aimbotInput.TextSize = 14
aimbotInput.TextXAlignment = Enum.TextXAlignment.Left

local aimbotToggle = Instance.new("TextButton")
aimbotToggle.Name = "AimbotToggle"
aimbotToggle.Parent = aimbotPage
aimbotToggle.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
aimbotToggle.BorderColor3 = Color3.fromRGB(255, 0, 0)
aimbotToggle.Position = UDim2.new(0.75, 0, 0.05, 0)
aimbotToggle.Size = UDim2.new(0.2, 0, 0.1, 0)
aimbotToggle.Font = Enum.Font.Code
aimbotToggle.Text = "OFF"
aimbotToggle.TextColor3 = Color3.fromRGB(255, 0, 0)
aimbotToggle.TextSize = 14

local aimbotStatus = Instance.new("TextLabel")
aimbotStatus.Name = "AimbotStatus"
aimbotStatus.Parent = aimbotPage
aimbotStatus.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
aimbotStatus.BorderColor3 = Color3.fromRGB(255, 0, 0)
aimbotStatus.Position = UDim2.new(0.05, 0, 0.2, 0)
aimbotStatus.Size = UDim2.new(0.9, 0, 0.1, 0)
aimbotStatus.Font = Enum.Font.Code
aimbotStatus.Text = "Status: Ready"
aimbotStatus.TextColor3 = Color3.fromRGB(255, 0, 0)
aimbotStatus.TextSize = 14
aimbotStatus.TextXAlignment = Enum.TextXAlignment.Left

-- Orbit Page Implementation
local orbitPage = Instance.new("Frame")
orbitPage.Name = "OrbitPage"
orbitPage.Parent = ContentContainer
orbitPage.BackgroundTransparency = 1
orbitPage.Size = UDim2.new(1, 0, 1, 0)
orbitPage.Visible = false

local orbitInput = Instance.new("TextBox")
orbitInput.Name = "OrbitInput"
orbitInput.Parent = orbitPage
orbitInput.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
orbitInput.BorderColor3 = Color3.fromRGB(255, 0, 0)
orbitInput.Position = UDim2.new(0.05, 0, 0.05, 0)
orbitInput.Size = UDim2.new(0.65, 0, 0.1, 0)
orbitInput.Font = Enum.Font.Code
orbitInput.PlaceholderText = "Enter Username"
orbitInput.TextColor3 = Color3.fromRGB(255, 0, 0)
orbitInput.TextSize = 14
orbitInput.TextXAlignment = Enum.TextXAlignment.Left

local orbitToggle = Instance.new("TextButton")
orbitToggle.Name = "OrbitToggle"
orbitToggle.Parent = orbitPage
orbitToggle.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
orbitToggle.BorderColor3 = Color3.fromRGB(255, 0, 0)
orbitToggle.Position = UDim2.new(0.75, 0, 0.05, 0)
orbitToggle.Size = UDim2.new(0.2, 0, 0.1, 0)
orbitToggle.Font = Enum.Font.Code
orbitToggle.Text = "OFF"
orbitToggle.TextColor3 = Color3.fromRGB(255, 0, 0)
orbitToggle.TextSize = 14

local orbitStatus = Instance.new("TextLabel")
orbitStatus.Name = "OrbitStatus"
orbitStatus.Parent = orbitPage
orbitStatus.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
orbitStatus.BorderColor3 = Color3.fromRGB(255, 0, 0)
orbitStatus.Position = UDim2.new(0.05, 0, 0.2, 0)
orbitStatus.Size = UDim2.new(0.9, 0, 0.1, 0)
orbitStatus.Font = Enum.Font.Code
orbitStatus.Text = "Status: Ready"
orbitStatus.TextColor3 = Color3.fromRGB(255, 0, 0)
orbitStatus.TextSize = 14
orbitStatus.TextXAlignment = Enum.TextXAlignment.Left

-- Core Feature Variables
local aimbotEnabled = false
local aimbotConnection = nil
local currentTarget = nil

local orbitEnabled = false
local orbitConnection = nil
local orbitTarget = nil
local orbitAngle = 0
local orbitDistance = 2
local orbitSpeed = 0.2

-- Aimbot Functions
local function getClosestPlayer()
    local localPlayer = Players.LocalPlayer
    local localCharacter = localPlayer.Character
    if not localCharacter then return nil end
    
    local localHead = localCharacter:FindFirstChild("Head")
    if not localHead then return nil end
    
    local closestPlayer = nil
    local closestDistance = math.huge
    
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character then
            local character = player.Character
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            local head = character:FindFirstChild("Head")
            
            if humanoid and humanoid.Health > 0 and head then
                local distance = (head.Position - localHead.Position).Magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    closestPlayer = player
                end
            end
        end
    end
    
    return closestPlayer
end

local function updateAimbot()
    if not aimbotEnabled then return end
    
    local targetPlayer = currentTarget
    if not targetPlayer or not targetPlayer.Character then
        targetPlayer = getClosestPlayer()
        currentTarget = targetPlayer
    end
    
    if targetPlayer and targetPlayer.Character then
        local character = targetPlayer.Character
        local head = character:FindFirstChild("Head")
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        
        if head and humanoid and humanoid.Health > 0 then
            local localPlayer = Players.LocalPlayer
            local localCharacter = localPlayer.Character
            if localCharacter then
                local humanoidRootPart = localCharacter:FindFirstChild("HumanoidRootPart")
                if humanoidRootPart then
                    local direction = (head.Position - humanoidRootPart.Position).Unit
                    humanoidRootPart.CFrame = CFrame.new(humanoidRootPart.Position, humanoidRootPart.Position + direction)
                end
            end
        else
            currentTarget = nil
        end
    end
end
-- Part 3: Tripmine and ESP Implementation

-- ESP Page Implementation
local espPage = Instance.new("Frame")
espPage.Name = "ESPPage"
espPage.Parent = ContentContainer
espPage.BackgroundTransparency = 1
espPage.Size = UDim2.new(1, 0, 1, 0)
espPage.Visible = false

local espScrollingFrame = Instance.new("ScrollingFrame")
espScrollingFrame.Name = "ESPScrollingFrame"
espScrollingFrame.Parent = espPage
espScrollingFrame.BackgroundTransparency = 1
espScrollingFrame.Size = UDim2.new(1, 0, 1, 0)
espScrollingFrame.CanvasSize = UDim2.new(0, 0, 1.5, 0)
espScrollingFrame.ScrollBarThickness = 5
espScrollingFrame.ScrollBarImageColor3 = Color3.fromRGB(255, 0, 0)

-- ESP Features
local highlightBtn = Instance.new("TextButton")
highlightBtn.Name = "HighlightBtn"
highlightBtn.Parent = espScrollingFrame
highlightBtn.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
highlightBtn.BorderColor3 = Color3.fromRGB(255, 0, 0)
highlightBtn.Position = UDim2.new(0.05, 0, 0.05, 0)
highlightBtn.Size = UDim2.new(0.9, 0, 0.15, 0)
highlightBtn.Font = Enum.Font.Code
highlightBtn.Text = "Enable Highlights"
highlightBtn.TextColor3 = Color3.fromRGB(255, 0, 0)
highlightBtn.TextSize = 14

local healthBarBtn = Instance.new("TextButton")
healthBarBtn.Name = "HealthBarBtn"
healthBarBtn.Parent = espScrollingFrame
healthBarBtn.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
healthBarBtn.BorderColor3 = Color3.fromRGB(255, 0, 0)
healthBarBtn.Position = UDim2.new(0.05, 0, 0.25, 0)
healthBarBtn.Size = UDim2.new(0.9, 0, 0.15, 0)
healthBarBtn.Font = Enum.Font.Code
healthBarBtn.Text = "Enable Health Bars"
healthBarBtn.TextColor3 = Color3.fromRGB(255, 0, 0)
healthBarBtn.TextSize = 14

-- Tripmine Page Implementation
local tripminePage = Instance.new("Frame")
tripminePage.Name = "TripminePage"
tripminePage.Parent = ContentContainer
tripminePage.BackgroundTransparency = 1
tripminePage.Size = UDim2.new(1, 0, 1, 0)
tripminePage.Visible = false

local tripmineInput = Instance.new("TextBox")
tripmineInput.Name = "TripmineInput"
tripmineInput.Parent = tripminePage
tripmineInput.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
tripmineInput.BorderColor3 = Color3.fromRGB(255, 0, 0)
tripmineInput.Position = UDim2.new(0.05, 0, 0.05, 0)
tripmineInput.Size = UDim2.new(0.65, 0, 0.1, 0)
tripmineInput.Font = Enum.Font.Code
tripmineInput.PlaceholderText = "Enter Username"
tripmineInput.TextColor3 = Color3.fromRGB(255, 0, 0)
tripmineInput.TextSize = 14
tripmineInput.TextXAlignment = Enum.TextXAlignment.Left

local tripmineThrowBtn = Instance.new("TextButton")
tripmineThrowBtn.Name = "TripmineThrowBtn"
tripmineThrowBtn.Parent = tripminePage
tripmineThrowBtn.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
tripmineThrowBtn.BorderColor3 = Color3.fromRGB(255, 0, 0)
tripmineThrowBtn.Position = UDim2.new(0.75, 0, 0.05, 0)
tripmineThrowBtn.Size = UDim2.new(0.2, 0, 0.1, 0)
tripmineThrowBtn.Font = Enum.Font.Code
tripmineThrowBtn.Text = "Throw"
tripmineThrowBtn.TextColor3 = Color3.fromRGB(255, 0, 0)
tripmineThrowBtn.TextSize = 14

local tripmineLoopToggle = Instance.new("TextButton")
tripmineLoopToggle.Name = "TripmineLoopToggle"
tripmineLoopToggle.Parent = tripminePage
tripmineLoopToggle.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
tripmineLoopToggle.BorderColor3 = Color3.fromRGB(255, 0, 0)
tripmineLoopToggle.Position = UDim2.new(0.75, 0, 0.2, 0)
tripmineLoopToggle.Size = UDim2.new(0.2, 0, 0.1, 0)
tripmineLoopToggle.Font = Enum.Font.Code
tripmineLoopToggle.Text = "Loop: OFF"
tripmineLoopToggle.TextColor3 = Color3.fromRGB(255, 0, 0)
tripmineLoopToggle.TextSize = 14

-- Feature Variables
local highlightEnabled = false
local highlightConnections = {}
local healthBarEnabled = false
local healthBarConnections = {}
local tripmineBox = nil
local tripmineCenter = nil
local tripmineLoopEnabled = false
local tripmineLoopConnection = nil

-- ESP Functions
local function ApplyHighlight(player)
    if not highlightEnabled then return end
    
    local character = player.Character
    if not character then
        character = player.CharacterAdded:Wait()
    end
    
    local highlighter = Instance.new("Highlight")
    highlighter.Parent = character
    highlighter.OutlineColor = Color3.fromRGB(255, 0, 0)
    highlighter.FillTransparency = 0.5
    highlighter.FillColor = player.TeamColor.Color

    -- Add glitch effect to highlight
    local glitchConnection = RunService.Heartbeat:Connect(function()
        if math.random() < 0.05 then -- 5% chance each frame
            highlighter.FillTransparency = math.random(3, 8) / 10
            wait(0.1)
            highlighter.FillTransparency = 0.5
        end
    end)

    highlightConnections[player] = {
        Highlighter = highlighter,
        TeamConnection = player:GetPropertyChangedSignal("TeamColor"):Connect(function()
            highlighter.FillColor = player.TeamColor.Color
        end),
        GlitchEffect = glitchConnection
    }
end

local function createHealthBar(player)
    if not healthBarEnabled then return end
    
    local character = player.Character
    if not character then
        character = player.CharacterAdded:Wait()
    end
    
    local head = character:WaitForChild("Head")
    local humanoid = character:WaitForChild("Humanoid")
    
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "HealthBarESP"
    billboard.AlwaysOnTop = true
    billboard.Size = UDim2.new(0, 100, 0, 30)
    billboard.Adornee = head
    billboard.ExtentsOffset = Vector3.new(0, 3, 0)
    billboard.MaxDistance = 100
    
    local background = Instance.new("Frame")
    background.Name = "Background"
    background.Size = UDim2.new(1, 0, 0, 20)
    background.Position = UDim2.new(0, 0, 0, 10)
    background.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
    background.BorderSizePixel = 0
    background.Parent = billboard
    
    local healthBar = Instance.new("Frame")
    healthBar.Name = "HealthBar"
    healthBar.Size = UDim2.new(1, -4, 1, -4)
    healthBar.Position = UDim2.new(0, 2, 0, 2)
    healthBar.BackgroundColor3 = Color3.new(0, 1, 0)
    healthBar.BorderSizePixel = 0
    healthBar.Parent = background

    -- Add matrix-style text effect to name label
    local nameLabel = Instance.new("TextLabel")
    nameLabel.Name = "NameLabel"
    nameLabel.Size = UDim2.new(1, 0, 0, 10)
    nameLabel.Position = UDim2.new(0, 0, 0, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Text = player.Name
    nameLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
    nameLabel.Font = Enum.Font.Code
    nameLabel.TextSize = 12
    nameLabel.Parent = billboard

    -- Add glitch effect to name
    local function glitchName()
        while healthBarEnabled and billboard.Parent do
            if math.random() < 0.1 then
                nameLabel.Text = glitchText(player.Name)
                wait(0.1)
                nameLabel.Text = player.Name
            end
            wait(0.5)
        end
    end
    coroutine.wrap(glitchName)()

    local function updateHealth()
        local health = humanoid.Health
        local maxHealth = humanoid.MaxHealth
        local percentage = health / maxHealth
        
        healthBar.Size = UDim2.new(percentage, -4, 1, -4)
        
        if percentage > 0.5 then
            healthBar.BackgroundColor3 = Color3.fromRGB(255 - ((percentage - 0.5) * 510), 255, 0)
        else
            healthBar.BackgroundColor3 = Color3.fromRGB(255, percentage * 510, 0)
        end
    end

    local healthConnection = humanoid.HealthChanged:Connect(updateHealth)
    updateHealth()
    billboard.Parent = character

    healthBarConnections[player] = {
        Billboard = billboard,
        HealthConnection = healthConnection
    }
end
-- Part 4: Teleport and Misc Features Implementation
-- Last Updated: 2025-06-07 22:53:21 UTC
-- User: JakeScripterz

-- Teleport Page Implementation
local teleportPage = Instance.new("Frame")
teleportPage.Name = "TeleportPage"
teleportPage.Parent = ContentContainer
teleportPage.BackgroundTransparency = 1
teleportPage.Size = UDim2.new(1, 0, 1, 0)
teleportPage.Visible = false

local teleportInput = Instance.new("TextBox")
teleportInput.Name = "TeleportInput"
teleportInput.Parent = teleportPage
teleportInput.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
teleportInput.BorderColor3 = Color3.fromRGB(255, 0, 0)
teleportInput.Position = UDim2.new(0.05, 0, 0.05, 0)
teleportInput.Size = UDim2.new(0.65, 0, 0.1, 0)
teleportInput.Font = Enum.Font.Code
teleportInput.PlaceholderText = "Enter Username"
teleportInput.TextColor3 = Color3.fromRGB(255, 0, 0)
teleportInput.TextSize = 14
teleportInput.TextXAlignment = Enum.TextXAlignment.Left

local teleportBtn = Instance.new("TextButton")
teleportBtn.Name = "TeleportBtn"
teleportBtn.Parent = teleportPage
teleportBtn.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
teleportBtn.BorderColor3 = Color3.fromRGB(255, 0, 0)
teleportBtn.Position = UDim2.new(0.75, 0, 0.05, 0)
teleportBtn.Size = UDim2.new(0.2, 0, 0.1, 0)
teleportBtn.Font = Enum.Font.Code
teleportBtn.Text = "Teleport"
teleportBtn.TextColor3 = Color3.fromRGB(255, 0, 0)
teleportBtn.TextSize = 14

local teleportStatus = Instance.new("TextLabel")
teleportStatus.Name = "TeleportStatus"
teleportStatus.Parent = teleportPage
teleportStatus.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
teleportStatus.BorderColor3 = Color3.fromRGB(255, 0, 0)
teleportStatus.Position = UDim2.new(0.05, 0, 0.2, 0)
teleportStatus.Size = UDim2.new(0.9, 0, 0.1, 0)
teleportStatus.Font = Enum.Font.Code
teleportStatus.Text = "Status: Ready"
teleportStatus.TextColor3 = Color3.fromRGB(255, 0, 0)
teleportStatus.TextSize = 14
teleportStatus.TextXAlignment = Enum.TextXAlignment.Left

-- Misc Page Implementation
local miscPage = Instance.new("Frame")
miscPage.Name = "MiscPage"
miscPage.Parent = ContentContainer
miscPage.BackgroundTransparency = 1
miscPage.Size = UDim2.new(1, 0, 1, 0)
miscPage.Visible = false

local miscScrollingFrame = Instance.new("ScrollingFrame")
miscScrollingFrame.Name = "MiscScrollingFrame"
miscScrollingFrame.Parent = miscPage
miscScrollingFrame.BackgroundTransparency = 1
miscScrollingFrame.Size = UDim2.new(1, 0, 1, 0)
miscScrollingFrame.CanvasSize = UDim2.new(0, 0, 1.5, 0)
miscScrollingFrame.ScrollBarThickness = 5
miscScrollingFrame.ScrollBarImageColor3 = Color3.fromRGB(255, 0, 0)

-- Misc Features
local staminaBtn = Instance.new("TextButton")
staminaBtn.Name = "StaminaBtn"
staminaBtn.Parent = miscScrollingFrame
staminaBtn.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
staminaBtn.BorderColor3 = Color3.fromRGB(255, 0, 0)
staminaBtn.Position = UDim2.new(0.05, 0, 0.05, 0)
staminaBtn.Size = UDim2.new(0.9, 0, 0.15, 0)
staminaBtn.Font = Enum.Font.Code
staminaBtn.Text = "Infinite Stamina: OFF"
staminaBtn.TextColor3 = Color3.fromRGB(255, 0, 0)
staminaBtn.TextSize = 14

local autoGenBtn = Instance.new("TextButton")
autoGenBtn.Name = "AutoGenBtn"
autoGenBtn.Parent = miscScrollingFrame
autoGenBtn.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
autoGenBtn.BorderColor3 = Color3.fromRGB(255, 0, 0)
autoGenBtn.Position = UDim2.new(0.05, 0, 0.25, 0)
autoGenBtn.Size = UDim2.new(0.9, 0, 0.15, 0)
autoGenBtn.Font = Enum.Font.Code
autoGenBtn.Text = "Auto Generator: OFF"
autoGenBtn.TextColor3 = Color3.fromRGB(255, 0, 0)
autoGenBtn.TextSize = 14

-- Status Display
local miscStatus = Instance.new("TextLabel")
miscStatus.Name = "MiscStatus"
miscStatus.Parent = miscScrollingFrame
miscStatus.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
miscStatus.BorderColor3 = Color3.fromRGB(255, 0, 0)
miscStatus.Position = UDim2.new(0.05, 0, 0.45, 0)
miscStatus.Size = UDim2.new(0.9, 0, 0.15, 0)
miscStatus.Font = Enum.Font.Code
miscStatus.Text = string.format("Last Updated: %s\nUser: %s", "2025-06-07 22:53:21", "JakeScripterz")
miscStatus.TextColor3 = Color3.fromRGB(255, 0, 0)
miscStatus.TextSize = 14
miscStatus.TextXAlignment = Enum.TextXAlignment.Left

-- Feature Variables
local staminaEnabled = false
local staminaLoop = nil
local autoGenEnabled = false
local autoGenLoop = nil

-- Teleport Functions
local function teleportBehindPlayer(targetPlayer)
    if not targetPlayer then
        teleportStatus.Text = glitchText("Status: No target selected")
        return
    end
    if not targetPlayer.Character then
        teleportStatus.Text = glitchText("Status: Target has no character")
        return
    end
    
    local humanoidRootPart = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then
        teleportStatus.Text = glitchText("Status: Target missing HumanoidRootPart!")
        return
    end
    
    local localPlayer = Players.LocalPlayer
    local localCharacter = localPlayer.Character
    if not localCharacter then
        teleportStatus.Text = glitchText("Status: You have no character!")
        return
    end
    
    local localRoot = localCharacter:FindFirstChild("HumanoidRootPart")
    if not localRoot then
        teleportStatus.Text = glitchText("Status: You're missing HumanoidRootPart!")
        return
    end
    
    -- Matrix-style teleport effect
    local originalPosition = localRoot.Position
    local targetCFrame = humanoidRootPart.CFrame
    local behindPosition = targetCFrame.Position - (targetCFrame.LookVector * 5.5)
    
    -- Create teleport particles
    local particles = Instance.new("ParticleEmitter")
    particles.Color = ColorSequence.new(Color3.fromRGB(255, 0, 0))
    particles.Lifetime = NumberRange.new(0.5)
    particles.Rate = 50
    particles.Speed = NumberRange.new(5)
    particles.Parent = localRoot
    
    -- Teleport sequence
    local steps = 5
    for i = 1, steps do
        localRoot.CFrame = CFrame.new(
            originalPosition:Lerp(behindPosition, i/steps),
            targetCFrame.Position
        )
        wait(0.02)
    end
    
    particles:Destroy()
    teleportStatus.Text = glitchText("Status: Teleported behind " .. targetPlayer.Name .. "!")
    
    -- Reset status after delay
    wait(2)
    teleportStatus.Text = "Status: Ready"
end

-- Misc Functions
local function toggleStamina()
    staminaEnabled = not staminaEnabled
    
    if staminaEnabled then
        staminaBtn.Text = "Infinite Stamina: ON"
        staminaBtn.TextColor3 = Color3.fromRGB(0, 255, 0)
        miscStatus.Text = glitchText("Status: Infinite Stamina enabled")
        
        staminaLoop = RunService.Heartbeat:Connect(function()
            local character = Players.LocalPlayer.Character
            if character then
                local humanoid = character:FindFirstChild("Humanoid")
                if humanoid then
                    humanoid.WalkSpeed = 32
                end
            end
        end)
    else
        staminaBtn.Text = "Infinite Stamina: OFF"
        staminaBtn.TextColor3 = Color3.fromRGB(255, 0, 0)
        miscStatus.Text = glitchText("Status: Infinite Stamina disabled")
        
        if staminaLoop then
            staminaLoop:Disconnect()
            staminaLoop = nil
        end
    end
end

local function toggleAutoGen()
    autoGenEnabled = not autoGenEnabled
    
    if autoGenEnabled then
        autoGenBtn.Text = "Auto Generator: ON"
        autoGenBtn.TextColor3 = Color3.fromRGB(0, 255, 0)
        miscStatus.Text = glitchText("Status: Auto Generator enabled")
        
        autoGenLoop = RunService.Heartbeat:Connect(function()
            -- Auto generator logic here
            -- This is a placeholder for the actual implementation
            wait(1)
        end)
    else
        autoGenBtn.Text = "Auto Generator: OFF"
        autoGenBtn.TextColor3 = Color3.fromRGB(255, 0, 0)
        miscStatus.Text = glitchText("Status: Auto Generator disabled")
        
        if autoGenLoop then
            autoGenLoop:Disconnect()
            autoGenLoop = nil
        end
    end
end

-- Connect Buttons
teleportBtn.MouseButton1Click:Connect(function()
    local playerName = teleportInput.Text
    if playerName and playerName ~= "" then
        local targetPlayer = Players:FindFirstChild(playerName)
        if targetPlayer then
            teleportBehindPlayer(targetPlayer)
        else
            teleportStatus.Text = glitchText("Status: Player not found!")
            wait(2)
            teleportStatus.Text = "Status: Ready"
        end
    else
        teleportStatus.Text = glitchText("Status: Enter a username!")
        wait(2)
        teleportStatus.Text = "Status: Ready"
    end
end)

staminaBtn.MouseButton1Click:Connect(toggleStamina)
autoGenBtn.MouseButton1Click:Connect(toggleAutoGen)
-- Part 5: Final Connections and Cleanup
-- Last Updated: 2025-06-07 22:55:10 UTC
-- User: JakeScripterz

-- System Information Display
local sysInfoFrame = Instance.new("Frame")
sysInfoFrame.Name = "SystemInfo"
sysInfoFrame.Parent = MainFrame
sysInfoFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
sysInfoFrame.BorderColor3 = Color3.fromRGB(255, 0, 0)
sysInfoFrame.Position = UDim2.new(0, 10, 0.95, -25)
sysInfoFrame.Size = UDim2.new(1, -20, 0, 20)
sysInfoFrame.ZIndex = 5

local sysInfoText = Instance.new("TextLabel")
sysInfoText.Name = "SystemInfoText"
sysInfoText.Parent = sysInfoFrame
sysInfoText.BackgroundTransparency = 1
sysInfoText.Size = UDim2.new(1, 0, 1, 0)
sysInfoText.Font = Enum.Font.Code
sysInfoText.Text = string.format("System Time: %s | User: %s | Status: Connected", "2025-06-07 22:55:10", "JakeScripterz")
sysInfoText.TextColor3 = Color3.fromRGB(255, 0, 0)
sysInfoText.TextSize = 12
sysInfoText.TextXAlignment = Enum.TextXAlignment.Left

-- Connection Status Indicator
local statusIndicator = Instance.new("Frame")
statusIndicator.Name = "StatusIndicator"
statusIndicator.Parent = sysInfoFrame
statusIndicator.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
statusIndicator.BorderColor3 = Color3.fromRGB(255, 0, 0)
statusIndicator.Position = UDim2.new(1, -15, 0.5, -4)
statusIndicator.Size = UDim2.new(0, 8, 0, 8)
statusIndicator.ZIndex = 6

-- Cleanup Handler
local cleanupConnections = {}

local function addConnection(connection)
    table.insert(cleanupConnections, connection)
end

-- System Clock Update
local function updateSystemClock()
    local connection = RunService.Heartbeat:Connect(function()
        local currentTime = os.date("!%Y-%m-%d %H:%M:%S", os.time())
        sysInfoText.Text = string.format("System Time: %s | User: %s | Status: Connected", currentTime, "JakeScripterz")
        
        -- Add glitch effect
        if math.random() < 0.05 then
            sysInfoText.Text = glitchText(sysInfoText.Text)
            wait(0.1)
            sysInfoText.Text = string.format("System Time: %s | User: %s | Status: Connected", currentTime, "JakeScripterz")
        end
    end)
    addConnection(connection)
end

-- Status Indicator Animation
local function animateStatusIndicator()
    local connection = RunService.Heartbeat:Connect(function()
        statusIndicator.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        if math.random() < 0.1 then
            statusIndicator.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
            wait(0.05)
            statusIndicator.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        end
    end)
    addConnection(connection)
end

-- Matrix Rain Effect
local function createMatrixRain()
    local matrixContainer = Instance.new("Frame")
    matrixContainer.Name = "MatrixContainer"
    matrixContainer.Parent = MainFrame
    matrixContainer.BackgroundTransparency = 1
    matrixContainer.Size = UDim2.new(1, 0, 1, 0)
    matrixContainer.ZIndex = 0

    local charset = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@#$%^&*"
    local columns = 20
    local rows = 15

    local function createMatrixCharacter(col, row)
        local char = Instance.new("TextLabel")
        char.BackgroundTransparency = 1
        char.Size = UDim2.new(1/columns, 0, 1/rows, 0)
        char.Position = UDim2.new(col/columns, 0, row/rows, 0)
        char.Font = Enum.Font.Code
        char.TextColor3 = Color3.fromRGB(0, 255, 0)
        char.TextSize = 14
        char.TextTransparency = 0.8
        char.Parent = matrixContainer
        return char
    end

    local matrixChars = {}
    for i = 1, columns do
        matrixChars[i] = {}
        for j = 1, rows do
            matrixChars[i][j] = createMatrixCharacter(i-1, j-1)
        end
    end

    local connection = RunService.Heartbeat:Connect(function()
        for col = 1, columns do
            if math.random() < 0.1 then
                for row = 1, rows do
                    local char = matrixChars[col][row]
                    char.Text = string.sub(charset, math.random(1, #charset), math.random(1, #charset))
                    char.TextTransparency = 0.8 + (row/rows) * 0.2
                    if math.random() < 0.05 then
                        char.TextColor3 = Color3.fromRGB(255, 0, 0)
                    else
                        char.TextColor3 = Color3.fromRGB(0, 255, 0)
                    end
                end
            end
        end
    end)
    addConnection(connection)
end

-- Performance Monitor
local function createPerformanceMonitor()
    local perfFrame = Instance.new("Frame")
    perfFrame.Name = "PerformanceMonitor"
    perfFrame.Parent = MainFrame
    perfFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    perfFrame.BorderColor3 = Color3.fromRGB(255, 0, 0)
    perfFrame.Position = UDim2.new(0, 10, 0.85, -25)
    perfFrame.Size = UDim2.new(1, -20, 0, 20)
    perfFrame.ZIndex = 5

    local perfText = Instance.new("TextLabel")
    perfText.Name = "PerformanceText"
    perfText.Parent = perfFrame
    perfText.BackgroundTransparency = 1
    perfText.Size = UDim2.new(1, 0, 1, 0)
    perfText.Font = Enum.Font.Code
    perfText.TextColor3 = Color3.fromRGB(255, 0, 0)
    perfText.TextSize = 12
    perfText.TextXAlignment = Enum.TextXAlignment.Left

    local connection = RunService.Heartbeat:Connect(function()
        local fps = math.floor(1/RunService.Heartbeat:Wait())
        local ping = math.floor(Players.LocalPlayer:GetNetworkPing() * 1000)
        perfText.Text = string.format("FPS: %d | Ping: %dms | Memory: %.2f MB", fps, ping, stats.GetTotalMemoryUsageMb())
    end)
    addConnection(connection)
end

-- Cleanup Function
local function cleanup()
    for _, connection in ipairs(cleanupConnections) do
        if typeof(connection) == "RBXScriptConnection" and connection.Connected then
            connection:Disconnect()
        end
    end
    
    -- Clean up highlights
    for _, data in pairs(highlightConnections) do
        if data.Highlighter and data.Highlighter.Parent then
            data.Highlighter:Destroy()
        end
        if data.TeamConnection then
            data.TeamConnection:Disconnect()
        end
        if data.GlitchEffect then
            data.GlitchEffect:Disconnect()
        end
    end
    
    -- Clean up health bars
    for _, data in pairs(healthBarConnections) do
        if data.Billboard and data.Billboard.Parent then
            data.Billboard:Destroy()
        end
        if data.HealthConnection then
            data.HealthConnection:Disconnect()
        end
    end
end

-- Initialize Additional Features
local function initializeAdditionalFeatures()
    updateSystemClock()
    animateStatusIndicator()
    createMatrixRain()
    createPerformanceMonitor()
end

-- Error Handler
local function errorHandler(err)
    local errorFrame = Instance.new("Frame")
    errorFrame.Name = "ErrorFrame"
    errorFrame.Parent = MainFrame
    errorFrame.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    errorFrame.BorderColor3 = Color3.fromRGB(255, 255, 255)
    errorFrame.Position = UDim2.new(0.5, -150, 0.5, -50)
    errorFrame.Size = UDim2.new(0, 300, 0, 100)
    errorFrame.ZIndex = 1000

    local errorText = Instance.new("TextLabel")
    errorText.Parent = errorFrame
    errorText.BackgroundTransparency = 1
    errorText.Size = UDim2.new(1, 0, 1, 0)
    errorText.Font = Enum.Font.Code
    errorText.Text = "ERROR: "..tostring(err)
    errorText.TextColor3 = Color3.fromRGB(255, 255, 255)
    errorText.TextSize = 14
    
    wait(3)
    errorFrame:Destroy()
end

-- Initialize Everything
local success, err = pcall(function()
    initializeAdditionalFeatures()
end)

if not success then
    errorHandler(err)
end

-- Cleanup on script end
game:BindToClose(cleanup)
